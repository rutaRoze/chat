version: '3.8'

services:
  jenkins:
    image: chat_jenkins:latest
    build:
      context: .
      dockerfile: Dockerfile.jenkins
    container_name: jenkins
    restart: unless-stopped
    ports:
      - "9001:8080"
      - "50000:50000"
    environment:
      JAVA_OPTS: "-Djenkins.install.runSetupWizard=false"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - sonarqube
    networks:
      - chatappnet

  sonarqube:
    image: sonarqube:latest
    container_name: sonar
    restart: unless-stopped
    ports:
      - "9000:9000"
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://db:5432/sonar
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_JDBC_PASSWORD=sonar
    volumes:
      - sonar_data:/opt/sonarqube/data
      - sonar_extensions:/opt/sonarqube/extensions
      - sonar_logs:/opt/sonarqube/logs
    depends_on:
      - db
    networks:
      - chatappnet

  db:
    image: postgres:15
    container_name: sonar-db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_DB=sonar
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - chatappnet

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: chat-app
    restart: unless-stopped
    ports:
      - "8080:8080"
    networks:
      - chatappnet

volumes:
  jenkins_home:
  sonar_data:
  sonar_extensions:
  sonar_logs:
  postgres_data:

networks:
  chatappnet:
    driver: bridge
